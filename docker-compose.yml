services:
  postgres:
    image: docker.io/library/postgres:latest
    container_name: postgres_container
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - local-network

  pgadmin:
    image: docker.io/dpage/pgadmin4:latest
    container_name: pgadmin_container
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - local-network
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  # Novo serviço: OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector:latest
    container_name: otel_collector_container
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "43170:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP HTTP receiver
      - "13133:13133" # Health Check extension
      - "14250:14250" # Jaeger gRPC receiver
      - "14268:14268" # Jaeger HTTP receiver
    networks:
      - local-network
    depends_on:
      - jaeger # Collector envia para Jaeger

  # Novo serviço: Jaeger
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger_container
    environment:
      COLLECTOR_OTLP_ENABLED: "true"
    ports:
      - "16686:16686" # Jaeger UI
    networks:
      - local-network

volumes:
  postgres_data:
  pgadmin_data:

networks:
  local-network:
